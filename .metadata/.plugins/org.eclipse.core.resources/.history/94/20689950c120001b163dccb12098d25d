#include "stm32l476xx.h"

//extern void GPIO_init();
extern void max7219_init();
extern void max7219_send(unsigned char address, unsigned char data);

unsigned int keypad_value[4][4] = {{ 1, 2, 3,10},
                            	   { 4, 5, 6,11},
								   { 7, 8, 9,12},
								   {15, 0,14,13}};

void display_clear()
{
	int i;
	for(i=1; i<=8; i++)
	{
		max7219_send(i, 0xF);
	}
}

void display(int data, int num_digs)
{
	int i;
	for(i=1; i<=num_digs; i++)
	{
		max7219_send(i, data%10);
		data/=10;
	}
}

void GPIO_init()
{
	RCC->AHB2ENR   |= 0b00000000000000000000000000000111; //safely initialize again

	// PA output row
	// PIN 5 = ROW 4 = PA 3
	// PIN 6 = ROW 3 = PA 2
	// PIN 7 = ROW 2 = PA 1
	// PIN 8 = ROW 1 = PA 0
	GPIOA->MODER   &= 0b11111111111111111111111100000000; // use pa 3210 for X output row
	GPIOA->MODER   |= 0b00000000000000000000000001010101; // use pa 3210 for X output row
	GPIOA->PUPDR   &= 0b11111111111111111111111100000000; // clear and set output use pup since we want 1 to be sent high level voltage
	GPIOA->PUPDR   |= 0b00000000000000000000000001010101; // clear and set output use pup since we want 1 to be sent high level voltage
	//GPIOA->OSPEEDR &= 0b11111111111111111111111100000000;
	//GPIOA->OSPEEDR |= 0b00000000000000000000000001010101;

	// PB input col
	// PIN 1 = COL 4 = PB 3
	// PIN 2 = COL 3 = PB 2
	// PIN 3 = COL 2 = PB 1
	// PIN 4 = COL 1 = PB 0
	GPIOB->MODER   &= 0b11111111111111111111111100000000; // use pb 3210 for Y input col
	GPIOB->PUPDR   &= 0b11111111111111111111111100000000; // clear and set input as pdown mode
	GPIOB->PUPDR   |= 0b00000000000000000000000010101010; // clear and set input as pdown mode

	// PC max7219
	GPIOC->MODER   &= 0b11111111111111111111111111000000; // clear right 6 bits
	GPIOC->MODER   |= 0b00000000000000000000000000010101; // set PC to output for max7219
}

int pressed_at(int row, int col)
{
	int t;
	GPIOA->ODR &= 0;        //clear the output value
	GPIOA->ODR |= (1<<row); //shift the value to send data for that row, data set
	t = GPIOA->ODR;

	int masked_value = GPIOB->IDR & 0xf;
	int is_pressed   = (masked_value >> col) & 1;

	return is_pressed;
}

void keypad_scan()
{
	int i, j;
	while(1)
	{
		int total = 0;
		int gi, gj;
		for(i=0; i<4; i++)
		{
			for(j=0; j<4; j++)
			{
				if(pressed_at(i,j) == 1) {
					total += keypad_value[i][j];
					gi=i;
					gj=j;
				}
			}
		}
		if(total == 0)
		 	display_clear();
		else
			display(gi*10+gj,2);
	}
}

int main()
{

	GPIO_init();
    max7219_init();
    display_clear();
    keypad_scan();
    return 0;
}
