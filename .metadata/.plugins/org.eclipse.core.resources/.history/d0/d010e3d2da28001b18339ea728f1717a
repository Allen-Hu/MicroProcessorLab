#include "stm32l476xx.h"
const unsigned int DELAY = 100000;

//reference to manual p225/1830
/*
f(PLLR) = f(PLL CLK INPUT)*(PLLN/(PLLM*PLLR))
SYS_CLK    PLLN    PLLM   PLLR   OUTPUT RESULT
1            8       8     4       4*8/32 = 1MHz
6            12      4     2       4*12/8 = 6MHz
10           20      4     2       4*20/8 = 10MHz
16           32      4     2       4*32/8 = 16MHz
40           80      4     2       4*80/8 = 40MHz
*/
const unsigned int PLL_CONFIG[5] =
{
    //PLLR[1:0]|PLLREN|23~16|15|PLLN[7:0]|7|PLLM[2:0]|3 2|PLLSRC[1:0]

    //MSI set as clock entry
    //654321098765432109876543210
    0b111000000000000100001110001,
    0b011000000000000110000110001,
    0b011000000000001010000110001,
    0b011000000000010000000110001,
    0b011000000000101000000110001
};

int state = 0;

void GPIO_init()
{
	// enable GPIOA (on-board led) and GPIOC (on-board button)
	RCC->AHB2ENR   |= 0b00000000000000000000000000000101;

	// set GPIOA pin 5 output
	GPIOA->MODER   &= 0b11111111111111111111001111111111;
	GPIOA->MODER   |= 0b00000000000000000000010000000000;

	// set GPIOC pin 13 input
	GPIOC->MODER   &= 0b11110011111111111111111111111111;
}

void set_system_clock()
{
    //temporarily use ths hsi clock before turning off the pll clock for configuration since the system still need the clock to work
    RCC->CR |= RCC_CR_HSION; //turn on the hsi clock before configuraion
    while((RCC->CR & RCC_CR_HSIRDY) == 0); //wait till the hsi clock has been really turned on

    RCC->CFGR = 0x00000000; //CFGR reset value
    RCC->CR  &= 0xFEFFFFFF; //PLL off
    while (RCC->CR & 0x02000000); //busy waiting till PLL is really halted

    //after halted, configure the PLLCFGR to set the clock speed
    RCC->PLLCFGR &= 0x00000001; //off all except the MSI clock source
    RCC->PLLCFGR |= PLL_CONFIG[state]; //customization PLLN PLLM PLLR settings

    RCC->CR |= RCC_CR_PLLON; //turn on the pll clock again
	while((RCC->CR & RCC_CR_PLLRDY) == 0); //busy waiting till PLL is really turned on

	RCC->CFGR |= RCC_CFGR_SW_PLL; //set the clock source as pll clock (customized)
    while ((RCC->CFGR & RCC_CFGR_SWS_PLL) != RCC_CFGR_SWS_PLL); //wait till the pll clock is really set
}

int delay_and_check_button()
{
	int yes = 0, no = 0, is_pressed;
	int i;
	for(i = 0; i < DELAY; i++)
	{
		is_pressed = (GPIOC->IDR >> 13) & 1;
		yes +=  is_pressed;
		no  += !is_pressed;
	}
	if(yes >= no)
		return 1;
	else
		return 0;
}

void invert_led()
{
	int is_on  = (GPIOA->ODR >> 5) & 1;
	int set_to = !is_on;
	GPIOA->ODR &= 0b1111111111011111;
	GPIOA->ODR |= set_to << 5;
}

int main()
{
    GPIO_init();
    set_system_clock();
    while(1)
    {
    	if(delay_and_check_button())
    	{
    		state = (state + 1) % 5;
    		set_system_clock();
    	}
    	invert_led();
    }
    return 0;
}
